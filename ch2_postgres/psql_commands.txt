-- after book database is created, page 10
-- make sure that you are in the correct db
\c book
select current_database();
CREATE EXTENSION tablefunc;
CREATE EXTENSION  dict_xsyn;
CREATE EXTENSION fuzzystrmatch;
CREATE EXTENSION fuzzystrmatchy;
CREATE EXTENSION pg_trgm;
CREATE EXTENSION cube;
-- check extension
select '1'::cube;
\h CREATE INDEX
\h SELECT
CREATE TABLE countries( country_code char(2) PRIMARY KEY, country_name text UNIQUE);
\l
\dt
INSERT INTO countries( country_code, country_name) values ('us','United States'),('mx','Mexico'),('au','Australia'),('gb','United Kingdom'),('de','Germany'),('ll','Loompaland');
INSERT INTO countries VALUES ('uk','United Kingdom');
SELECT * from countries;
DELETE from countries where country_code = 'll';
\q
CREATE TABLE cities ( name text NOT NULL, postal_code varchar(9) CHECK (postal_code <> ''), country_code char(2) REFERENCES countries, PRIMARY KEY (country_code, postal_code));
INSERT INTO cities VALUES ('Toronto','M4C1B5', 'ca');
INSERT INTO cities VALUES ('Portland','87200','us');
UPDATE cities SET postal_code = '97205' WHERE name = 'Portland';
SELECT cities.*, country_name FROM cities INNER JOIN countries ON cities.country_code = countries.country_code;
CREATE TABLE venues ( venue_id SERIAL PRIMARY KEY, name varchar(255), street_address text, type char(7) CHECK (type in ('public','private')) DEFAULT 'public', postal_code varchar(9), country_code char(2), FOREIGN KEY (country_code, postal_code) REFERENCES cities (country_code, postal_code) MATCH FULL);
\dt
\q

